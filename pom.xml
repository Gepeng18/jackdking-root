<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jackdking.root</groupId>
  <artifactId>jackdking-root</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
<!--   第一种创建多个springboot项目方法 -->
  <parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.1.0.RELEASE</version>
	<relativePath/> 
  </parent>
  <modules>
    <module>jackdking-datasource</module> 
    <module>jackdking-bigfileupload</module>
    <module>jackdking-activemq</module>
    <module>jackdking-redissioncluster</module>
    <module>jackdking-common</module>
  </modules>
  
	<!-- 第二种创建多个springboot项目方法，多继承import，用于继承继承企业自身库 -->
<!-- 	<dependencyManagement> -->
<!-- 	    <dependencies> -->
<!-- 	        <dependency> -->
<!-- 	            <groupId>org.springframework.boot</groupId> -->
<!-- 	            <artifactId>spring-boot-dependencies</artifactId> -->
<!-- 	            <version>2.1.2.RELEASE</version> -->
<!-- 	            <type>pom</type> -->
<!-- 	            <scope>import</scope> -->
<!-- 	        </dependency> -->
<!-- 	    </dependencies> -->
<!-- 	</dependencyManagement> -->
	
	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties> 
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<!-- 子模块选择继承或者不继承 -->
	<dependencyManagement>  
		<dependencies>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>1.3.2</version>
			</dependency>
		<!-- 		注意这里，mysql默认是Mysql6  此时mysql驱动类是 com.mysql.cj.jdbc.Driver-->
			<dependency>
	            <groupId>mysql</groupId>
	            <artifactId>mysql-connector-java</artifactId> 
	            <scope>runtime</scope>
    			<version>6.0.6</version>
            </dependency>
            <dependency>
	            <groupId>org.aspectj</groupId>
	            <artifactId>aspectjweaver</artifactId>
	            <version>1.8.7</version>
        	</dependency>
        </dependencies>
	</dependencyManagement>
	
<!-- 	<build> -->
<!-- 	    <plugins> -->
<!-- 	        <plugin> -->
<!-- 	            <groupId>org.apache.maven.plugins</groupId> -->
<!-- 	            <artifactId>maven-compiler-plugin</artifactId> -->
<!-- 	            <version>3.1</version> -->
<!-- 	            <configuration> -->
<!-- 	                <source>1.8</source> -->
<!-- 	                <target>1.8</target> -->
<!-- 	            </configuration> -->
<!-- 	        </plugin> -->
<!-- 	    </plugins> -->
<!-- 	</build> -->




	
	<!-- SpringBoot应用的打包插件 -->
	<build>
	    <plugins>
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	        </plugin>
	    </plugins>
	</build> 

<!-- 打包成jar包 -->
<!--  	<build> -->
<!--         <plugins> -->
<!--             <plugin> -->
<!--                 <groupId>org.springframework.boot</groupId> -->
<!--                 <artifactId>spring-boot-maven-plugin</artifactId> -->
<!--                 <executions> -->
<!--                     <execution> -->
<!--                         <goals> -->
<!-- repackage：创建一个自动可执行的jar或war文件。它可以替换常规的artifact，或者用一个单独的classifier附属在maven构建的生命周期中。 -->
<!--                             <goal>repackage</goal> -->
<!--                         </goals> -->
<!--                     </execution> -->
<!--                 </executions> -->
<!--             </plugin> -->
<!--         </plugins> -->
<!-- 	</build> -->


</project>